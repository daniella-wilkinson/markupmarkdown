###############################################################################################
ggplot(region.7, aes(x = Defense)) +
geom_histogram(binwidth = 10, fill = "#3DB2FF", color = "white", alpha = 1) +
labs(
title = "Pokémon Defense Distribution in Alola",
x = "Total Defense",
y = "Frequency"
) +
theme_minimal()
###############################################################################################
ggplot(region.7, aes(x = Sp.Defense)) +
geom_histogram(binwidth = 10, fill = "#3DB2FF", color = "white", alpha = 1) +
labs(
title = "Pokémon Defense+ Distribution in Alola",
x = "Total Defense+",
y = "Frequency"
) +
theme_minimal()
###############################################################################################
ggplot(region.7, aes(x = Speed)) +
geom_histogram(binwidth = 10, fill = "#3DB2FF", color = "white", alpha = 1) +
labs(
title = "Pokémon Speed Distribution in Alola",
x = "Total Speed",
y = "Frequency"
) +
theme_minimal()
###############################################################################################
ggplot(region.7, aes(x = Total)) +
geom_histogram(binwidth = 10, fill = "#3DB2FF", color = "white", alpha = 1) +
labs(
title = "Pokémon Power Distribution in Alola",
x = "Total Total",
y = "Frequency"
) +
theme_minimal()
#| include: false
library(haven)
library(ggplot2)
library(reactable)
###############################################################################################
pokedex <- read.csv("pokedex.csv"); pokedex$X <- NULL
pokedex.type <- read.csv("pokedex.type.csv"); pokedex.type$X <- NULL
###############################################################################################
region.8 <- subset(pokedex, Region == "Galar", c(
Region, ID, Name, Type, Legendary, Sex, Height,
Height.ft, Height.Class, Weight, Weight.lbs, Weight.Class, Health, Attack,
Sp.Attack, Defense, Sp.Defense, Speed, Total, Abilities
))
reg_type.8 <- subset(pokedex.type, Region == "Galar", c(
Region, ID, Name, Type, Legendary, Sex, Height,
Height.ft, Height.Class, Weight, Weight.lbs, Weight.Class, Health, Attack,
Sp.Attack, Defense, Sp.Defense, Speed, Total, Abilities
))
#| echo: false
reg_table.8 <- subset(region.8, , c(
ID, Name, Type, Health, Attack, Sp.Attack,
Defense, Sp.Defense, Speed, Total
))
###############################################################################################
colnames(reg_table.8)[colnames(reg_table.8) == "Sp.Attack"] <- "Attack+"
colnames(reg_table.8)[colnames(reg_table.8) == "Sp.Defense"] <- "Defense+"
color.scales <- function(x) rgb(colorRamp(c(
"white", "#5DB996"))(x),
maxColorValue = 255)
###############################################################################################
reactable(
reg_table.8,
style = list(fontFamily = "Arial, sans-serif"),
# column styling
defaultColDef = colDef(
style = list(fontFamily = "Arial, sans-serif"),
align = "center",
vAlign = "center",
minWidth = 70,
headerStyle = list(background = "#f7f7f8")
),
columns = list(
# color scales : col 1
Health = colDef(style = function(value) {
normalized <- (value - min(reg_table.8$Health)) /
(max(reg_table.8$Health) - min(reg_table.8$Health))
color <- color.scales(normalized)
list(background = color)
}),
# color scales : col 2
Attack = colDef(style = function(value) {
normalized <- (value - min(reg_table.8$Attack)) /
(max(reg_table.8$Attack) - min(reg_table.8$Attack))
color <- color.scales(normalized)
list(background = color)
}),
# color scales : col 3
`Attack+` = colDef(style = function(value) {
normalized <- (value - min(reg_table.8$`Attack+`)) /
(max(reg_table.8$`Attack+`) - min(reg_table.8$`Attack+`))
color <- color.scales(normalized)
list(background = color)
}),
# color scales : col 4
Defense = colDef(style = function(value) {
normalized <- (value - min(reg_table.8$Defense)) /
(max(reg_table.8$Defense) - min(reg_table.8$Defense))
color <- color.scales(normalized)
list(background = color)
}),
# color scales : col 5
`Defense+` = colDef(style = function(value) {
normalized <- (value - min(reg_table.8$`Defense+`)) /
(max(reg_table.8$`Defense+`) - min(reg_table.8$`Defense+`))
color <- color.scales(normalized)
list(background = color)
}),
# color scales : col 6
Speed = colDef(style = function(value) {
normalized <- (value - min(reg_table.8$Speed)) /
(max(reg_table.8$Speed) - min(reg_table.8$Speed))
color <- color.scales(normalized)
list(background = color)
}),
# color scales : col 7
Total = colDef(style = function(value) {
normalized <- (value - min(reg_table.8$Total)) /
(max(reg_table.8$Total) - min(reg_table.8$Total))
color <- color.scales(normalized)
list(background = color)
}),
# column revisions
ID = colDef(minWidth = 50, filterable = FALSE),
Name = colDef(minWidth = 80, filterable = FALSE)
),
filterable = TRUE,
searchable = TRUE,
borderless = TRUE,
# page parameter(s)
defaultPageSize = 10
)
#| echo: false
ggplot(region.8, aes(x = Health)) +
geom_histogram(binwidth = 10, fill = "#5DB996", color = "white", alpha = 1) +
labs(
title = "Pokémon Health Distribution in Galar",
x = "Total Health",
y = "Frequency"
) +
theme_minimal()
###############################################################################################
ggplot(region.8, aes(x = Attack)) +
geom_histogram(binwidth = 10, fill = "#5DB996", color = "white", alpha = 1) +
labs(
title = "Pokémon Attack Distribution in Galar",
x = "Total Attack",
y = "Frequency"
) +
theme_minimal()
###############################################################################################
ggplot(region.8, aes(x = Sp.Attack)) +
geom_histogram(binwidth = 10, fill = "#5DB996", color = "white", alpha = 1) +
labs(
title = "Pokémon Attack+ Distribution in Galar",
x = "Total Attack+",
y = "Frequency"
) +
theme_minimal()
###############################################################################################
ggplot(region.8, aes(x = Defense)) +
geom_histogram(binwidth = 10, fill = "#5DB996", color = "white", alpha = 1) +
labs(
title = "Pokémon Defense Distribution in Galar",
x = "Total Defense",
y = "Frequency"
) +
theme_minimal()
###############################################################################################
ggplot(region.8, aes(x = Sp.Defense)) +
geom_histogram(binwidth = 10, fill = "#5DB996", color = "white", alpha = 1) +
labs(
title = "Pokémon Defense+ Distribution in Galar",
x = "Total Defense+",
y = "Frequency"
) +
theme_minimal()
###############################################################################################
ggplot(region.8, aes(x = Speed)) +
geom_histogram(binwidth = 10, fill = "#5DB996", color = "white", alpha = 1) +
labs(
title = "Pokémon Speed Distribution in Galar",
x = "Total Speed",
y = "Frequency"
) +
theme_minimal()
###############################################################################################
ggplot(region.8, aes(x = Total)) +
geom_histogram(binwidth = 10, fill = "#5DB996", color = "white", alpha = 1) +
labs(
title = "Pokémon Power Distribution in Galar",
x = "Total Total",
y = "Frequency"
) +
theme_minimal()
ggplot(region.8, aes(x = Health)) +
geom_histogram(binwidth = 10, fill = "#A7D477", color = "white", alpha = 1) +
labs(
title = "Pokémon Health Distribution in Galar",
x = "Total Health",
y = "Frequency"
) +
theme_minimal()
#| echo: false
ggplot(region.8, aes(x = Health)) +
geom_histogram(binwidth = 10, fill = "#A7D477", color = "white", alpha = 1) +
labs(
title = "Pokémon Health Distribution in Galar",
x = "Total Health",
y = "Frequency"
) +
theme_minimal()
#| echo: false
ggplot(reg_type.1, aes(x = Type)) +
geom_bar(fill = "#FADA7A") +
ggtitle("Pokémon Type Distribution in Kanto") +
labs(x = "Pokémon Type", y = "Frequency") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
#| include: false
library(haven)
library(ggplot2)
library(reactable)
###############################################################################################
pokedex <- read.csv("pokedex.csv"); pokedex$X <- NULL
pokedex.type <- read.csv("pokedex.type.csv"); pokedex.type$X <- NULL
###############################################################################################
region.1 <- subset(pokedex, Region == "Kanto", c(
Region, ID, Name, Type, Legendary, Sex, Height,
Height.ft, Height.Class, Weight, Weight.lbs, Weight.Class, Health, Attack,
Sp.Attack, Defense, Sp.Defense, Speed, Total, Abilities
))
reg_type.1 <- subset(pokedex.type,Region == "Kanto", c(
Region, ID, Name, Type, Legendary, Sex, Height,
Height.ft, Height.Class, Weight, Weight.lbs, Weight.Class, Health, Attack,
Sp.Attack, Defense, Sp.Defense, Speed, Total, Abilities
))
#| echo: false
reg_table.1 <- subset(region.1, , c(
ID, Name, Type, Health, Attack, Sp.Attack,
Defense, Sp.Defense, Speed, Total
))
###############################################################################################
colnames(reg_table.1)[colnames(reg_table.1) == "Sp.Attack"] <- "Attack+"
colnames(reg_table.1)[colnames(reg_table.1) == "Sp.Defense"] <- "Defense+"
color.scales <- function(x) rgb(colorRamp(c(
"white", "#FADA7A"))(x),
maxColorValue = 255)
###############################################################################################
reactable(
reg_table.1,
style = list(fontFamily = "Arial, sans-serif"),
# column styling
defaultColDef = colDef(
style = list(fontFamily = "Arial, sans-serif"),
align = "center",
vAlign = "center",
minWidth = 70,
headerStyle = list(background = "#f7f7f8")
),
columns = list(
# color scales : col 1
Health = colDef(style = function(value) {
normalized <- (value - min(reg_table.1$Health)) /
(max(reg_table.1$Health) - min(reg_table.1$Health))
color <- color.scales(normalized)
list(background = color)
}),
# color scales : col 2
Attack = colDef(style = function(value) {
normalized <- (value - min(reg_table.1$Attack)) /
(max(reg_table.1$Attack) - min(reg_table.1$Attack))
color <- color.scales(normalized)
list(background = color)
}),
# color scales : col 3
`Attack+` = colDef(style = function(value) {
normalized <- (value - min(reg_table.1$`Attack+`)) /
(max(reg_table.1$`Attack+`) - min(reg_table.1$`Attack+`))
color <- color.scales(normalized)
list(background = color)
}),
# color scales : col 4
Defense = colDef(style = function(value) {
normalized <- (value - min(reg_table.1$Defense)) /
(max(reg_table.1$Defense) - min(reg_table.1$Defense))
color <- color.scales(normalized)
list(background = color)
}),
# color scales : col 5
`Defense+` = colDef(style = function(value) {
normalized <- (value - min(reg_table.1$`Defense+`)) /
(max(reg_table.1$`Defense+`) - min(reg_table.1$`Defense+`))
color <- color.scales(normalized)
list(background = color)
}),
# color scales : col 6
Speed = colDef(style = function(value) {
normalized <- (value - min(reg_table.1$Speed)) /
(max(reg_table.1$Speed) - min(reg_table.1$Speed))
color <- color.scales(normalized)
list(background = color)
}),
# color scales : col 7
Total = colDef(style = function(value) {
normalized <- (value - min(reg_table.1$Total)) /
(max(reg_table.1$Total) - min(reg_table.1$Total))
color <- color.scales(normalized)
list(background = color)
}),
# column revisions
ID = colDef(minWidth = 50, filterable = FALSE),
Name = colDef(minWidth = 80, filterable = FALSE)
),
# table styling
# filterable = TRUE, minRows = 10,
filterable = TRUE,
searchable = TRUE,
borderless = TRUE,
# page parameter(s)
defaultPageSize = 10
)
#| echo: false
ggplot(reg_type.3, aes(x = Type)) +
geom_bar(fill = "#98D8EF") +
ggtitle("Pokémon Type Distribution in Hoenn") +
labs(x = "Pokémon Type", y = "Frequency") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
View(pokedex)
getwd()
list.files()
v
pokedex <- read.csv("pokedex.csv"); pokedex$X <- NULL
pokedex.type <- read.csv("pokedex.type.csv"); pokedex.type$X <- NULL
# Function to randomly select a challenger
select.challenger <- function(pokedex) {
sample(pokedex$ID, 1)
}
# Function to get the challenger's details
identify.challenger <- function(pokedex) {
challenger.id <- select.challenger(pokedex)
challenger <- pokedex[pokedex$ID == challenger.id, ]
return(challenger)
}
identify.challenger()
identify.challenger(pokedex)
select.challenger()
# run code
identify.challenger(pokedex)
# DO NOT EDIT
# function : select pokémon
select.challenger <- function(pokedex) {
sample(pokedex$ID, 3)
}
# DO NOT EDIT
# function : identify pokémon
identify.challenger <- function(pokedex) {
challenger.id <- select.challenger(pokedex)
challenger <- pokedex[pokedex$ID == challenger.id, ]
return(challenger)
}
# run code
identify.challenger(pokedex)
#| include: false
# install packages
# initialize packages
library(haven)
library(ggplot2)
##################################################################################
# reconfigure the working directory accordingly
getwd()
setwd("~/Dowloads")
#| include: false
# DO NOT EDIT
# function : select pokémon
select.challenger <- function(pokedex) {
sample(pokedex$ID, 1)
}
# DO NOT EDIT
##################################################################################
# DO NOT EDIT
# function : identify pokémon
identify.challenger <- function(pokedex) {
challenger.id <- select.challenger(pokedex)
challenger <- pokedex[pokedex$ID == challenger.id, ]
return(challenger)
}
# DO NOT EDIT
select.challenger <- function(regional.subset) {
min.id <- min(regional.subset$ID)
max.id <- max(regional.subset$ID)
sample(min.id:max.id, 1)
}
identify.challenger <- function(regional.subset) {
challenger.id <- select.challenger(regional.subset)
print(paste("Challenger ID :", challenger.id))
regional.subset[regional.subset$ID == challenger.id, ]}
print(challenger <- identify.challenger(pokedex))
#| include: false
# DO NOT EDIT
# function : select pokémon
select.challenger <- function(pokedex) {
sample(pokedex$ID, 1)
}
# DO NOT EDIT
##################################################################################
# DO NOT EDIT
# function : identify pokémon
identify.challenger <- function(pokedex) {
challenger.id <- select.challenger(pokedex)
challenger <- pokedex[pokedex$ID == challenger.id, ]
return(challenger)
}
# DO NOT EDIT
#| echo: false
print(speciman <- identify.challenger(pokedex)) # run code
#| include: false
# DO NOT EDIT
# function : select pokémon
select.challenger <- function(pokedex) {
sample(pokedex$ID, 3)
}
# DO NOT EDIT
##################################################################################
# DO NOT EDIT
# function : identify pokémon
identify.challenger <- function(pokedex) {
challenger.id <- select.challenger(pokedex)
challenger <- pokedex[pokedex$ID == challenger.id, ]
return(challenger)
}
# DO NOT EDIT
#| echo: false
print(speciman <- identify.challenger(pokedex)) # run code
View(speciman)
ggplot(speciman, aes(x = sp.defense)) +
geom_bar(fill = "#DD544E") +
ggtitle("Pokémon Type Distribution in Kanto") +
labs(x = "Pokemon Type", y = "Frequency") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
#| echo: false
print(speciman.1 <- identify.challenger(pokedex)) # run code
print(speciman.2 <- identify.challenger(pokedex)) # run code
print(speciman.3 <- identify.challenger(pokedex)) # run code
wild.pokemon <- rbind(speciman.1, speciman.2, speciman.3)
ggplot(wild.pokemon, aes(x = sp.defense)) +
geom_bar(fill = "#DD544E") +
ggtitle("Pokémon Type Distribution in Kanto") +
labs(x = "Pokemon Type", y = "Frequency") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
View(wild.pokemon)
ggplot(wild.pokemon, aes(x = Sp.Defense)) +
geom_bar(fill = "#DD544E") +
ggtitle("Pokémon Type Distribution in Kanto") +
labs(x = "Pokemon Defense+", y = "Frequency") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
ggplot(wild.pokemon, aes(x = Attack)) +
geom_bar(fill = "#DD544E") +
ggtitle("Pokémon Type Distribution in Kanto") +
labs(x = "Pokemon Defense+", y = "Frequency") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
ggplot(wild.pokemon, aes(x = Attack)) +
geom_bar(fill = "#DD544E") +
ggtitle("Pokémon Type Distribution in Kanto") +
labs(x = "Pokemon Defense+", y = "Frequency") +
theme_minimal() +
coord_flip() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
ggplot(wild.pokemon, aes(x = Attack)) +
geom_bar(fill = "#DD544E") +
ggtitle("Pokémon Type Distribution in Kanto") +
labs(x = "Pokemon Defense+", y = "Frequency") +
theme_minimal() +
coord_polar() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
ggplot(wild.pokemon, aes(x = Attack)) +
geom_bar(fill = "#DD544E", "blue", "pink") +
ggtitle("Pokémon Type Distribution in Kanto") +
labs(x = "Pokemon Defense+", y = "Frequency") +
theme_minimal() +
coord_polar() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
ggplot(wild.pokemon, aes(x = Attack)) +
geom_bar(fill = "#DD544E") +
ggtitle("Pokémon Type Distribution in Kanto") +
labs(x = "Pokemon Defense+", y = "Frequency") +
theme_minimal() +
coord_polar() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
#| include: false
# pokedex by geographic distribution
region.1 <- subset(pokedex, Region == "Kanto", c(
Region, ID, Name, Type, Legendary, Sex, Height,
Height.ft, Height.Class, Weight, Weight.lbs, Weight.Class, Health, Attack,
Sp.Attack, Defense, Sp.Defense, Speed, Total, Abilities
))
# pokedex by type distribution
region.type.1 <- subset(pokedex.type,Region == "Kanto", c(
Region, ID, Name, Type, Legendary, Sex, Height,
Height.ft, Height.Class, Weight, Weight.lbs, Weight.Class, Health, Attack,
Sp.Attack, Defense, Sp.Defense, Speed, Total, Abilities
))
